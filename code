from pygame import*

background = (200, 255, 255)
win_width = 600
win_hight = 500
win_display = display.set_mode((win_width, win_hight))
win_display.fill(background)
background = transform.scale(image.load("fon.jpg"), (700,500))



class GameSprite(sprite.Sprite):    
    def __init__(self, player_image, player_x, player_y, player_speed, player_width, player_height):
        super().__init__()
        self.width = player_width
        self.height = player_height
        self.image = transform.scale(image.load(player_image), (self.width, self.height)) 
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
        self.speed = player_speed

    def reset(self):
        win_display.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update_l(self):
        keys_pressed = key.get_pressed()  
        if keys_pressed[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        elif keys_pressed[K_DOWN] and self.rect.y < win_hight - 155:
            self.rect.y += self.speed
    def update_r(self):
        keys_pressed = key.get_pressed()  
        if keys_pressed[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        elif keys_pressed[K_s] and self.rect.y < win_hight -155:
            self.rect.y += self.speed

rel_time = False
game = True
finish = False
clock = time.Clock()
FPS = 60

player1 = Player('racket.png', 30, 200, 4, 50, 150)
player2 = Player('racket.png', 520, 200, 4, 50, 150)
ball = Player('ball.png', 200, 200, 4, 50, 50)


font.init()
font = font.Font(None, 35)
lose1 = font.render('Player 1 Lose!', True, (180, 0, 0))
lose2 = font.render('Player 2 Lose!', True, (180, 0, 0))

speed_x = 3
speed_y = 3

while game:
    for e in event.get():
        if e.type == QUIT:
            game = False
            finish = True
            rel_time = False 

    if finish != True:
        win_display.blit(background, (0, 0))
        keys_pressed = key.get_pressed()
        player1.update_r()
        player2.update_l()
        ball.rect.x += speed_x
        ball.rect.y += speed_y
        player1.reset()
        player2.reset()
        ball.reset()
        
        if sprite.collide_rect(player1, ball) or sprite.collide_rect(player2, ball):
            speed_x *= -1
            


        if ball.rect.y > win_hight - 50 or ball.rect. y < 0:
            speed_y *= -1

        if ball.rect.x < 0:
            finish = True
            win_display.blit(lose1, (200, 200))
            game_over = True

        if ball.rect.x > win_width:
            finish = True
            win_display.blit(lose2, (200, 200))
            game_over = True


    display.update()
    clock.tick(FPS)
